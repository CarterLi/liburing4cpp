
name: CMake
on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        name: [ gcc-11, clang-14-libc++ ]

        include:
          - name: gcc-11
            compiler: g++-11
            packages: >
              g++-11
            compiler-flags: ""

          - name: clang-14-libc++
            compiler: clang++-14
            packages: >
              clang++-14
              libc++-14-dev
              libc++1-14
              libc++abi1-14
              libc++abi-14-dev
            compiler-flags: "-stdlib=libc++"


    steps:
    - uses: actions/checkout@v3

    - name: Install Compilers
      run: |
        if [[ "${{matrix.name}}" == "clang-14-libc++" ]]; then \
          wget https://apt.llvm.org/llvm.sh -O /tmp/llvm.sh; \
          sudo bash /tmp/llvm.sh 14; \
          sudo apt-get install -y libc++-14-dev libc++abi-14-dev; \
        else \
          sudo apt-get update -y; \
          sudo apt-get install -y g++-11; \
        fi;

    # Package liburing-dev only exists in ubuntu 20.10 and later, so we have to
    # install it manually
    - name: Install liburing
      working-directory: "/tmp"
      run: |
        git clone https://github.com/axboe/liburing.git
        cd liburing
        ./configure
        make -j 8
        sudo make install

    - name: Configure CMake
      working-directory: ${{ github.workspace }}
      run: >
        cmake
        -B build
        -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
        -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
        -DCMAKE_CXX_FLAGS="${{ matrix.compiler-flags }}"

    - name: Build
      working-directory: ${{ github.workspace }}
      # Build your program with the given configuration
      run: >
        cmake
        --build build
        --config ${{ env.BUILD_TYPE }}


    # TODO: create test programs in test/ directory, register these with CTest
    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
